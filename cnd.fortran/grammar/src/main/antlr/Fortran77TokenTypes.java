// $ANTLR 2.7.7 (20060906): "f77-antlr2.g" -> "Fortran77Lexer.java"$

package org.netbeans.modules.fortran.generated;
import org.netbeans.modules.fortran.ast.TokenAST;
import antlr.CommonToken;
import java.util.HashSet;

public interface Fortran77TokenTypes {
	int EOF = 1;
	int NULL_TREE_LOOKAHEAD = 3;
	int LABELREF = 4;
	int XCON = 5;
	int PCON = 6;
	int FCON = 7;
	int RCON = 8;
	int CCON = 9;
	int HOLLERITH = 10;
	int CONCATOP = 11;
	int CTRLDIRECT = 12;
	int CTRLREC = 13;
	int TO = 14;
	int SUBPROGRAMBLOCK = 15;
	int DOBLOCK = 16;
	int AIF = 17;
	int THENBLOCK = 18;
	int ELSEIF = 19;
	int ELSEBLOCK = 20;
	int CODEROOT = 21;
	int COMMENT = 22;
	int PROGRAM = 23;
	int NAME = 24;
	int EOS = 25;
	int ENTRY = 26;
	int LPAREN = 27;
	int RPAREN = 28;
	int FUNCTION = 29;
	int BLOCK = 30;
	int SUBROUTINE = 31;
	int COMMA = 32;
	int LABEL = 33;
	int END = 34;
	int DIMENSION = 35;
	int REAL = 36;
	int COLON = 37;
	int STAR = 38;
	int EQUIVALENCE = 39;
	int COMMON = 40;
	int DIV = 41;
	int COMPLEX = 42;
	int ICON = 43;
	int DOUBLE = 44;
	int PRECISION = 45;
	int INTEGER = 46;
	int LOGICAL = 47;
	int POINTER = 48;
	int IMPLICIT = 49;
	int NONE = 50;
	int MINUS = 51;
	int CHARACTER = 52;
	int PARAMETER = 53;
	int ASSIGN = 54;
	int EXTERNAL = 55;
	int INTRINSIC = 56;
	int SAVE = 57;
	int DATA = 58;
	int GOTO = 59;
	int GO = 60;
	int IF = 61;
	int THEN = 62;
	int LITERAL_else = 63;
	int LITERAL_if = 64;
	int LITERAL_then = 65;
	int ELSE = 66;
	int ENDIF = 67;
	int LITERAL_end = 68;
	int DO = 69;
	int ENDDO = 70;
	int LITERAL_do = 71;
	int CONTINUE = 72;
	int STOP = 73;
	int PAUSE = 74;
	int WRITE = 75;
	int READ = 76;
	int PRINT = 77;
	int SCON = 78;
	int OPEN = 79;
	int LITERAL_fmt = 80;
	int LITERAL_unit = 81;
	int LITERAL_err = 82;
	int LITERAL_iostat = 83;
	int LITERAL_file = 84;
	int LITERAL_status = 85;
	int LITERAL_access = 86;
	int LITERAL_position = 87;
	int LITERAL_form = 88;
	int LITERAL_recl = 89;
	int LITERAL_blank = 90;
	int LITERAL_exist = 91;
	int LITERAL_opened = 92;
	int LITERAL_number = 93;
	int LITERAL_named = 94;
	int LITERAL_name = 95;
	int LITERAL_sequential = 96;
	int LITERAL_formatted = 97;
	int LITERAL_unformatted = 98;
	int LITERAL_nextrec = 99;
	int CLOSE = 100;
	int INQUIRE = 101;
	int BACKSPACE = 102;
	int ENDFILE = 103;
	int REWIND = 104;
	int FORMAT = 105;
	int DOLLAR = 106;
	int PLUS = 107;
	int LET = 108;
	int CALL = 109;
	int RETURN = 110;
	int NEQV = 111;
	int EQV = 112;
	int LOR = 113;
	int LAND = 114;
	int LNOT = 115;
	int LT = 116;
	int LE = 117;
	int EQ = 118;
	int NE = 119;
	int GT = 120;
	int GE = 121;
	int POWER = 122;
	int LITERAL_real = 123;
	int TRUE = 124;
	int FALSE = 125;
	int LITERAL_program = 126;
	int LITERAL_entry = 127;
	int LITERAL_function = 128;
	int LITERAL_block = 129;
	int LITERAL_subroutine = 130;
	int LITERAL_dimension = 131;
	int LITERAL_equivalence = 132;
	int LITERAL_common = 133;
	int LITERAL_complex = 134;
	int LITERAL_double = 135;
	int LITERAL_precision = 136;
	int LITERAL_integer = 137;
	int LITERAL_logical = 138;
	int LITERAL_pointer = 139;
	int LITERAL_implicit = 140;
	int LITERAL_none = 141;
	int LITERAL_character = 142;
	int LITERAL_parameter = 143;
	int LITERAL_external = 144;
	int LITERAL_intrinsic = 145;
	int LITERAL_save = 146;
	int LITERAL_data = 147;
	int LITERAL_assign = 148;
	int LITERAL_goto = 149;
	int LITERAL_go = 150;
	int LITERAL_elseif = 151;
	int LITERAL_endif = 152;
	int LITERAL_enddo = 153;
	int LITERAL_continue = 154;
	int LITERAL_stop = 155;
	int LITERAL_pause = 156;
	int LITERAL_write = 157;
	int LITERAL_read = 158;
	int LITERAL_print = 159;
	int LITERAL_open = 160;
	int LITERAL_close = 161;
	int LITERAL_inquire = 162;
	int LITERAL_backspace = 163;
	int LITERAL_endfile = 164;
	int LITERAL_rewind = 165;
	int LITERAL_format = 166;
	int LITERAL_let = 167;
	int LITERAL_call = 168;
	int LITERAL_return = 169;
	int ASSIGN1 = 170;
	int XOR = 171;
	int EOR = 172;
	int CONTINUATION = 173;
	int WS = 174;
	int ZCON = 175;
	int WHITE = 176;
	int ALPHA = 177;
	int NUM = 178;
	int ALNUM = 179;
	int HEX = 180;
	int SIGN = 181;
	int NOTNL = 182;
	int INTVAL = 183;
	int FDESC = 184;
	int EXPON = 185;
}
